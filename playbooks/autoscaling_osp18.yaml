---
- hosts: localhost
  become: no
  name: Run the autoscaling tests
  # NOTE: These vars should be eventually moved into a vars file.
  vars:
    openstack_cmd: "oc rsh openstackclient openstack"
    metrics_backend: "prometheus"
    stack_image: "cirros"
    stack_flavor: "m1.small"
    stack_network: "private"
    stack_external_network: "public"
  tasks:
      # this is temperory and should be replaced later by some heat stack or some ansible

    - set_fact:
        fvt_dir: "{{ playbook_dir }}/feature-verification-tests"
      when: "{{ not fvt_dir is defined }}"
      tags:
        always

    - debug: var=fvt_dir

    - command:
        cmd: git clone http://github.com/infrawatch/feature-verification-tests -b efoley-add_telemetry_autoscaling {{ fvt_dir }}
        creates: "{{ fvt_dir }}"
      tags:
        - setup

    - ansible.builtin.command:
        cmd: git clone http://github.com/openstack-k8s-operators/install_yamls
        chdir: "{{ playbook_dir }}"
        creates: "{{ playbook_dir }}/install_yamls"
      tags:
        - setup

    - community.general.make:
        chdir: "{{ playbook_dir }}/install_yamls/devsetup"
        target: edpm_deploy_instance
      tags:
        - setup

    - name: Patch the openstackversions to use the master containers for aodh and heat
      ansible.builtin.shell:
        cmd: |
          oc patch openstackversions openstack-galera-network-isolation --type merge --patch-file patch.yaml
      tags:
        - setup

    - name: patch observabilityclient into openstackclient
      shell:
        cmd: |
          oc exec openstackclient -- python3 -m ensurepip --upgrade
          oc exec openstackclient -- python3 -m pip install --upgrade aodhclient
          oc exec openstackclient -- python3 -m pip install --upgrade python-observabilityclient
      tags:
        - setup

    - name: Wait until the oscp is resolved the changes to continue
      ansible.builtin.shell:
        cmd: |
          oc get oscp | grep "Setup complete"
      retries: 24
      timeout: 5
      until: output.stdout_lines | length == 1
      register: output
      tags:
        - setup

    # NOTE: the tags are for testing/development, eventually, the role will just be imported, and main.yml will run through the tasks
    - import_role:
        name: '{{ fvt_dir }}roles/telemetry_autoscaling'
        tasks_from: 'verify_autoscaling'
      tags:
        - precheck 
    - import_role:
        name: '{{ fvt_dir }}/roles/telemetry_autoscaling'
        tasks_from: configure_heat
          #tasks_from: creating_stack
      tags:
        - create

    - import_role:
        name: '{{ fvt_dir }}/roles/telemetry_autoscaling'
        tasks_from: creating_stack
      tags:
        - create

    - import_role:
        name: '{{ fvt_dir }}/roles/telemetry_autoscaling'
        tasks_from: test_autoscaling
      tags:
        - test
