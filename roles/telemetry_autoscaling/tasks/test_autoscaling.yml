---
- name: Register instance IP
  ansible.builtin.shell: |
    # source ~/overcloudrc;
    export STACK_ID=$({{ openstack_cmd }} stack show {{ stack_name }} -c id -f value)
    {{ openstack_cmd }} server list --long -c Networks -c 'Properties' | \
        grep -i $STACK_ID | \
        awk  -F'=' '{print $2}' | \
        awk '{print $1}'
        #awk -F',' '{print $1}'
  register: vnf_instance_ip

- name: Show the IP
  ansible.builtin.debug:
    var: vnf_instance_ip

- name: RHOSO-12665 Verfiy the number of instances before scaling
  ansible.builtin.shell: |
    # source ~/overcloudrc;
    {{ openstack_cmd }} server list --long | grep -i 'metering.server_group' | wc -l
  register: instance_count1

- name: Test automatic scaling up of instances
  ansible.builtin.shell: |
    sshpass -p gocubsgo ssh cirros@{{ item }} "sudo yes > /dev/null &"
  register: result
  with_items: "{{ vnf_instance_ip.stdout_lines }}"

- name: RHOSO-12660 Verify that the alarm has been triggered
  ansible.builtin.shell: |
    # source ~/overcloudrc;
    {{ openstack_cmd }} alarm list -c state -c name -f value| \
        grep -i "cpu_alarm_high" | \
        awk '{print $2}'
  retries: 100
  delay: 5
  register: result
  until: result.stdout == "alarm"

- name: RHOSO-12661 Verify that the Orchestration service has scaled up the instances
  ansible.builtin.shell: |
    # source ~/overcloudrc;
    {{ openstack_cmd }} server list --long|grep -i metering.server_group | wc -l
  retries: 100
  delay: 5
  register: instance_count2
  until: instance_count2.stdout == "3"

- name: Test automatic scaling down of instances
  ansible.builtin.pause:
    minutes: 5

- name: RHOSO-12664 Verify that the alarm has been triggered
  ansible.builtin.shell: |
    # source ~/overcloudrc;
    {{ openstack_cmd }} alarm list -c state -c name -f value| \
        grep -i "cpu_alarm_low" | \
        awk '{print $2}'
  retries: 100
  delay: 5
  register: result
  until: result.stdout == "alarm"

- name: RHOSO-12663 Verify that the Orchestration service has scaled down the instances
  ansible.builtin.shell: |
    # source ~/overcloudrc;
    {{ openstack_cmd }} server list --long|grep -i metering.server_group |wc -l
  retries: 100
  delay: 5
  register: instance_count3
  until: instance_count3.stdout == "1"
